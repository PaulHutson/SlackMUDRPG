TODO List:
----------

1) DONE Finalise the CommandClasses>SlackMud>GetCharacter method 
	DONE- Load the user from the GetCharacter Method, bringing in the JSON code.
		DONE- Remember that we need to add it to the characters within the world

2) DONE Create location Method
	DONE- Create stubs for locations & exits (done)
	DONE- On first load, use the JSON>Scripts>EnterWorldProcess-FirstLocation file to select the first room to show.
	DONE- On subsequent loads use the location information within the Player file.
	DONE- Implement move method
		DONE- using the available exits from the location (north, east, front door, etc...)
		DONE- ... update the player location within the player file.

3) Implement object system ROB WORKING ON THIS
	DONE- Add player inventory
		DONE- Add items to inventory
			DONE- Use start script to add a few items to the player inventory to stat with.
			DONE- Get items from room location, add to inventory. ("TAKE ItemName")
				- Check that there is room in the inventory (weight and space)
			DONE- Look at items being held (equipped to slots)
				- Add item to container
			DONE- Look at items in a container (containers can contain containers)
			DONE- Eqiup item from bag to any slot or a specific slot (so it can be used)
		DONE- Remove items from inventory
			DONE- Add items to the room
		- Use items
			DONE - Add player locations to character file
			DONE - Add item use locations to items stub
			- Implement use item method for using on the character
				- Check whether something is alredy in the slot
				- If nothing is in the slot use the item
					- use item effects based on the item parameters. (i.e. a torch will light things up)
						- may need a new item effect element.
		- Weights/Capacity
			DONE- Add weight restrictions
		- Containers
			DONE- Add containers - like backpacks.
			- Add Capacity restrictions for containers
		- Wear and Tear
			- Implement a wear and tear function, with a reduction in the HP of an object
			- If the object gets to 0 it becomes broken
				Note: We need a way of mending them (this will be a skill later on!)
		- Body Parts
			- Implement body parts on character
			- Wear item (type clothing)
			- Remove items (type clothing)
		- Key Chain
			- Implement a key chain on the player
			- Keys lock containers and doors
				- lock mechanism
				- unlock mechanism

4) Implement Chat System PAUL WORKING ON THIS
	DONE- Implement Say command which will talk to all people in a location ("SAY Hello")
	DONE- Implement Whisper command to whisper to a specific person ("WHISPER PlayerName Hello")
	- Implement Shout command which will talk to all people across all locations around the current location ("SHOUT Hello")
		- Note, when this command is used and someone hears it from another location it will say where the sound is coming from (i.e. "You hear someone shouting to the north" where north is an exit)
	DONE- Implement announce function for when someone arrives in a room.
	DONE- Implement general message to player function
	DONE- Implement global announce function.

5) Skill System PAUL WORKING ON THIS
	- Add Skill System functionality
		DONE- Skill Class
			DONE- Skill Name
			DONE- Skill Type
			DONE- Base Stat for the skill
			DONE- Skill Description
			DONE- Skill Shortcut (if not passive)
			DONE- Improvement Speed
			DONE- Prerequisite Skills
		DONE- Skill:
			- GrandType Fighting Skills
				DONE- TYPE Melee
					DONE- Dagger
					DONE- Sword
				DONE- TYPE Ranged
					DONE- Bow
				DONE- TYPE Unarmed
					DONE- boxing
				DONE- Defence
					DONE- parrying
					DONE- blocking
					DONE- dodging
			- Functional Skills
				DONE- CHOP item i.e. CHOP TREE to chop a tree, if the character has an axe equipped.
				- MAKE item i.e. MAKE SWORD (would need to have an available, unused anvil)
					- Using an item marks it as "in use" until the thing is done or the player is logged out.
					- sword would use an additional sub skill of "Weaponsmithing"
						- Which would be a subskill of "BlackSmithing"
	- Implement Commands/Skills
		DONE- Attack ("ATTACK PlayerName") - will use default item in their hand
			DONE- Hit points must reduce
			DONE- Character death
		- BUILD/MAKE PROCESS
			- Build steps class (like the skills one).
			- Different states for the item during manufacture.
			- Consumption of receipe items during steps.
			Implementation
				- Make ("MAKE Torch") - will use the items from their inventory to make the torch.
					- Make advanced ("MAKE Sword USING Anvil")
				- Build ("BUILD Shed") - will use items in a location to build something.
					- This should take time (as per the object stub).
					- Not sure if the build system should be split up a bit - i.e. you can build 5% of the house, depending on how
					long you take doing it or until resources run out.

7) Implement Story element
	- Jobs system (get jobs from a notice board)
		- Means we need a new notice board system, with a "LOOK AT" and/or "EXAMINE" command.
	- Implement story arcs (locations you need to go to, get clues, clues generate if someone is on a quest on entry to the location / they can only see them themselves)

8) More Stuff
	- Creatures (basic, they attack on enter or only attack when attacked, might flee from an area as well)

V0.2 Items

1) Generate World
	- FIRST extend the locations to include weather effects
		- Season/Weather types:
			- Winter (Snow)
			- Spring
			- Rain
			- Summer (hot)
			- Autumn
		- Add Night / Day descriptions
			- For each weather type
		- Note, not all locations will have any change of effect, so will need to use the base description.
	- Create a world image (i.e. pixels of green, yellow, etc)
	- Create stubs for different types of terrain
		- desert
		- forest
		- plains
			- grass
			- tundra
		- Artic
	- Generate world objects to interact with
		- Trees
		- Plants
			- Flowers
			- Berry bushes
				- berries
	- Set the object types to have a "respawn" type function within the room so they regrow
	- Generate the JSON for the image (each pixel is a location)

2) More Stuff
	- Characters (basic, stay in locations, can talk back / say set phrases)
	- Character Jobs (basic, can get jobs / tasks from a character)
	- Characters (advanced, can move around routes, change their persona based on location (i.e. bob goes to the pub at night and gets drunk so speaks differently)
	- Character Jobs (advanced, can get jobs from characters but they react to what has already been done (i.e. the jobs are generated on a frequency - Mrs Miggens doesn't always need flour if she has already had loads delivered already).
	- Creatures (advanced, they can react / follow scripts as to what they do.)


MISC Thoughts:
	- I wonder how to do a "pulse" type system to ensure that all the automated things happen.
		i.e.	Building continuing
				Seasons changing (would need extra information in the location stubs for each season, quite cool though)
					Effects of the seasons (i.e. players needing more clothes in the winter months, storms breaking houses)
				AI creatures - how to make things move around / react?  This would need to be on the pulse system.
	- Timeout Characters
	- Possibility to look through an exit to the lands beyond, i.e. "LOOK E" returns "You can see fields to the east, with mountains in the background"


